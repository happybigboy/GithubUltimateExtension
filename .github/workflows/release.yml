name: Release

on:
  push:
    branches:
      - main

jobs:
  upload-release-asset:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get commit message
        id: commit
        run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Check if commit message contains version
        id: check_version
        run: |
          if [[ "${{ steps.commit.outputs.message }}" =~ V[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "release=true" >> $GITHUB_OUTPUT
            echo "version=${BASH_REMATCH[0]}" >> $GITHUB_OUTPUT
          else
            echo "release=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: steps.check_version.outputs.release == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        if: steps.check_version.outputs.release == 'true'
        run: |
          npm install tailwindcss
          npm ci

      - name: Run TailwindCSS CLI
        if: steps.check_version.outputs.release == 'true'
        run: npx tailwindcss -i ./src/input.css -o ./src/output.css

      - name: Package extension
        if: steps.check_version.outputs.release == 'true'
        run: |
          zip -r extension-${{ steps.check_version.outputs.version }}.zip src/* manifest.json

      - name: Create Release
        if: steps.check_version.outputs.release == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ steps.check_version.outputs.version }}
          release_name: Release ${{ steps.check_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: steps.check_version.outputs.release == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension-${{ steps.check_version.outputs.version }}.zip
          asset_name: extension-${{ steps.check_version.outputs.version }}.zip
          asset_content_type: application/zip
